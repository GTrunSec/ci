parameters:
  #nixVersion: latest
  nixVersion: nix-2.3
  ciVersion: master
  ciPath: ""
  nixChannelUrls:
    home-manager:
      mangled: home_manager
  nixChannels: {}
  config: MUST_PROVIDE_CONFIG_FILE
  timeoutInMinutes: 5
steps:
- bash: |
    if [[ -z ${CI_ENV-} ]]; then
      export CI_ENV=${CI_ENV-$(Agent.BuildDirectory)/.ci}
      echo "##vso[task.setvariable variable=CI_ENV]$CI_ENV"
    fi
    export BASH_ENV="$CI_ENV/ci/source"
    echo "##vso[task.setvariable variable=BASH_ENV]$BASH_ENV"

    nix_install() {
      if type -P nix > /dev/null; then
        return
      fi

      case "$(uname -s).$(uname -m)" in
        Linux.x86_64) NIX_SYSTEM=x86_64-linux;;
        Linux.i?86) NIX_SYSTEM=i686-linux;;
        Linux.aarch64) NIX_SYSTEM=aarch64-linux;;
        Darwin.x86_64) NIX_SYSTEM=x86_64-darwin;;
      esac

      if [[ $NIX_VERSION = latest ]]; then
        NIX_VERSION=$(curl -fsSL $NIX_URL/install | grep -o 'nix-[0-9.]*' | tail -n1)
      fi

      sudo mkdir -pm 0755 /nix /etc/nix && sudo chown $(id -u) /nix /etc/nix
      if curl -fsSLI $NIX_URL/nix-${NIX_VERSION#nix-}-$NIX_SYSTEM.tar.xz; then
        tar -C /nix --strip-components=1 -xJf <(curl -fSL $NIX_URL/nix-${NIX_VERSION#nix-}-$NIX_SYSTEM.tar.xz)
      else
        tar -C /nix --strip-components=1 -xjf <(curl -fSL $NIX_URL/nix-${NIX_VERSION#nix-}-$NIX_SYSTEM.tar.bz2)
      fi

      NIX_STORE_NIX=$(echo /nix/store/*-nix-2*)
      NIX_STORE_CACERT=$(echo /nix/store/*-nss-cacert-*)
      cat >> ~/.bash_profile <<EOF

        export PATH=$NIX_STORE_NIX/bin:$PATH
        export NIX_SSL_CERT_FILE=$NIX_STORE_CACERT/etc/ssl/certs/ca-bundle.crt
    EOF

      $NIX_STORE_NIX/bin/nix-store --init && $NIX_STORE_NIX/bin/nix-store --load-db < /nix/.reginfo
      rm /nix/*.sh /nix/.reginfo
    }

    set -eu
    nix_install &&
    bash -lc "nix-build --show-trace -o $CI_ENV $CI_URL -A env --argstr config $CI_CONFIG" &&
    bash -c ci-setup
  displayName: nix install
  timeoutInMinutes: ${{parameters.timeoutInMinutes}}
  env:
    CI_CONFIG: ${{parameters.config}}
    NIX_URL: https://nixos.org/releases/nix/${{parameters.nixVersion}}
    NIX_VERSION: ${{parameters.nixVersion}}
    CI_URL: ${{coalesce(parameters.ciPath, format('https://github.com/arcnmx/ci/archive/{0}.tar.gz', coalesce(parameters.nixChannels.ci, parameters.ciVersion)))}}
    ${{ each channel in parameters.nixChannels }}:
      NIX_CHANNELS_${{coalesce(parameters.nixChannelUrls[channel.key].mangled, channel.key)}}: ${{channel.value}}
